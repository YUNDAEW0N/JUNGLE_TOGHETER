user  nginx;
worker_processes  auto; # Nginx 워커 프로세스의 수 auto: cpu 코어 수 만큼 프로세스 생성
error_log  /var/log/nginx/error.log warn; # 에러 로그 경로 및 로그 레벨
pid        /var/run/nginx.pid; # Nginx 프로세스 아이디 파일 경로

events {
    worker_connections  1024; # Nginx 워커 프로세스가 처리할 수 있는 최대 커넥션 수
}

http {
    server {
        listen 80; # Nginx 서버가 리스닝할 포트
        server_name app_localhost; # 서버 도메인 이름

        location / {
            proxy_pass http://app:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "keep-alive";
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
        }
    }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'; # 로그 포맷
    access_log  /var/log/nginx/access.log  main; # 접근 로그 경로 및 로그 포맷

    sendfile        on;     # 파일 전송을 위한 sendfile 모듈 활성화
    keepalive_timeout  65; # 클라이언트와 서버 사이의 연결을 유지할 시간
    include /etc/nginx/conf.d/*.conf; # 추가적인 설정 파일을 불러올 수 있음
}
